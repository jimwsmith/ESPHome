substitutions:
  friendly_name: "Fire7"
  sensor_update: 60s

esphome:
  name: device7
  friendly_name: Device7
  includes:
    - mics6814.h
  libraries:
    - "Wire"
    - https://github.com/ZodiusInfuser/IOExpander_Library
  on_boot:
    - delay: 5s
    - lvgl.widget.hide: boot_screen

external_components:
  - source:
      type: git
      url: https://github.com/ssieb/custom_components

esp32:
  board: m5stack-fire
  framework:
    type: arduino
  flash_size: 16MB # Need to manually override defaults so M5STACK FIRE memory is correct

psram: #Need to include this so logs will display PSRAM detected, note only 4MB detected even though 8MB exists (probably because himem not implemented)
  mode: octal
  speed: 80MHz

# Define I/O: UART, I²C and SPI
i2c:
  sda: 21
  scl: 22
  scan: true

spi:
  clk_pin: 18
  mosi_pin: 23
  miso_pin: 19

# Enable logging
logger:
  logs:
    component: ERROR #Supress excessive warnings about display writing

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption
  on_client_connected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.show: lbl_hastatus
  on_client_disconnected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.hide: lbl_hastatus

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback Hotspot"
    password: "jJ1NYBE0mELq"
  
captive_portal:

time:
  - platform: homeassistant 
    id: homeassistant_time
    on_time: #Automation to enable display screen saver
      - hours: 2,3,4,5
        minutes: 5
        seconds: 0
        then:
          - switch.turn_on: switch_antiburn
      - hours: 2,3,4,5
        minutes: 35
        seconds: 0
        then:
          - switch.turn_off: switch_antiburn
      - minutes: '*'
        seconds: 0
        then:
          - script.execute: time_update #Updates time in top_level lvgl display
    on_time_sync:
      - script.execute: time_update

script:
  - id: time_update
    then:
      - lvgl.label.update:
          id: lbl_time
          text: 
            format: "%s"
            args: [ 'id(homeassistant_time).now().strftime("%R").c_str()' ]

# Power Management
ip5306:
  battery_level:
    name: ${friendly_name} Battery Percent
    id: battery_percent
    on_value: #When value changes update LVGL display
    - lvgl.label.update:
        id: lbl_battery
        text: !lambda |-
          if (id(battery_percent).state == 100) {
            return "\uF240";
          } else if (id(battery_percent).state == 75) {
            return "\uF241";
          } else if (id(battery_percent).state == 50) {
            return "\uF242";
          } else if (id(battery_percent).state == 25) {
            return "\uF243";
          } else return "\uF244";
  charger_connected:
    name: ${friendly_name} Charger Connected
    id: connected
  charge_full:
    name: ${friendly_name} Charge Full
    id: full
# ============================================================================
# Minimal example configuration with common sensors
bme68x_bsec2_i2c:
  address: 0x76
  model: bme680
  operating_age: 4d
  sample_rate: ULP #LP (3sec) or ULP (5min) update cycle
  supply_voltage: 3.3V

  
# Button to toggle the display backlight
binary_sensor:
  - platform: gpio
    id: M5_BtnA
    pin:
      number: 39
      inverted: true
    on_double_click:
      then: # Focus on top level buttons at bottom (of this page)
        - lvgl.widget.focus: top_layer
  - platform: gpio
    id: M5_BtnB
    pin:
      number: 38
      inverted: true
    on_double_click:
      then: # Return to Home screen with focus on top level buttons at bottom
        - lvgl.page.show: main_page
#        - lvgl.widget.focus: top_layer
  - platform: gpio
    id: M5_BtnC
    pin:
      number: 37
      inverted: true

sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    icon: mdi:wifi
    name: "WiFi Signal dB"
    id: wifi_signal_db
    unit_of_measurement: "dB"
    update_interval: ${sensor_update}
    entity_category: "diagnostic"
                
  - platform: copy # Reports the WiFi signal strength in %
    icon: mdi:wifi
    id: wifi_signal_db_percent
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""
    on_value:
        then:
          - lvgl.label.update:
              id: lbl_wifi_strength
              text:
                format: "Wi-Fi:\n%.0fdB"
                args: [ 'id(wifi_signal_db).state' ]  

  - platform: scd30 #Absolute CO2, temp, humidity
    co2:
      name: "SCD30 CO2"
      accuracy_decimals: 1
    temperature:
      name: "SCD30 Temperature"
      accuracy_decimals: 1
    humidity:
      name: "SCD30 Humidity"
      accuracy_decimals: 1
    temperature_offset: 0 °C #was 1.5
    address: 0x61
    update_interval: ${sensor_update}

  - platform: pmsa003i #Adafruit PMSA003I Air Quality
    pm_1_0:
      name: "PM1.0"
    pm_2_5:
      name: "PM2.5"
    pm_10_0:
      name: "PM10.0"
    pmc_0_3:
      name: "PMC >0.3µm"
    pmc_0_5:
      name: "PMC >0.5µm"
    pmc_1_0:
      name: "PMC >1µm"
    pmc_2_5:
      name: "PMC >2.5µm"
    pmc_5_0:
      name: "PMC >5µm"
    pmc_10_0:
      name: "PMC >10µm"
    update_interval: ${sensor_update}
      
  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.greenhouse_pots_temperature
    internal: true

  - platform: homeassistant
    id: outside_temperature
    entity_id: sensor.t_h_shed_ext_temperature
    internal: true

  - platform: bme68x_bsec2
    # Update Interbal fixed at 5min or 3sec in hardware settings
    temperature:
      name: "BME68x Temperature"
      id: bme68x_temperature
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_bme68x_temperature
            text: 
              format: "Temperature\n %.1f °C"
              args: [ 'x' ]
    pressure:
      name: "BME68x Pressure"
      id: bme68x_pressure
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_bme68x_pressure
            text: 
              format: "Pressure\n %.0f hPa"
              args: [ 'x' ]
    humidity:
      name: "BME68x Humidity"
      id: bme68x_humidity
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_bme68x_humidity
            text: 
              format: "Humidity\n %.1f%%"
              args: [ 'x' ]
    iaq:
      name: "BME68x IAQ"
      id: iaq
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_bme68x_iaq
            text: 
              format: "IAQ\n %.0f"
              args: [ 'x' ]
    co2_equivalent:
      name: "BME68x CO2 Equivalent"
      id: bme68x_co2equivalent
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_bme68x_co2equivalent
            text: 
              format: "CO2 equiv\n %.0f ppm"
              args: [ 'x' ]
    breath_voc_equivalent:
      name: "BME68x Breath VOC Equivalent"
      id: bme68x_vocequivalent
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_bme68x_vocequivalent
            text: 
              format: "VOC equiv\n %.0f ppm"
              args: [ 'x' ]

  - platform: custom
    # update_interval defined at top of mics6814.h
    lambda: |-
      auto my_sensor = new mics6814();
      App.register_component(my_sensor);
      return {my_sensor->redres_sensor, my_sensor->nh3res_sensor, my_sensor->oxres_sensor, my_sensor->co_sensor, my_sensor->no2_sensor, my_sensor->nh3_sensor, my_sensor->c3h8_sensor, my_sensor->c4h10_sensor, my_sensor->ch4_sensor, my_sensor->h2_sensor, my_sensor->c2h5oh_sensor };
    sensors:
    - name: "Red Res Sensor"
#      id: 6814_red_res_sensor
      entity_category: "diagnostic"
      unit_of_measurement: Ohm
      accuracy_decimals: 0
      icon: "mdi:gauge"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_red_res_sensor
            text: 
              format: "Reducing\n %.0f ohm"
              args: [ 'x' ]
    - name: "NH3 Res Sensor"
#      id: 6814_nh3_res_sensor
      entity_category: "diagnostic"
      unit_of_measurement: Ohm
      accuracy_decimals: 0
      icon: "mdi:gauge"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_nh3_res_sensor
            text: 
              format: "NH3\n %.0f ohm"
              args: [ 'x' ]
    - name: "Ox Res Sensor"
#      id: 6814_ox_res_sensor
      entity_category: "diagnostic"
      unit_of_measurement: Ohm
      accuracy_decimals: 0
      icon: "mdi:gauge"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_ox_res_sensor
            text: 
              format: "Oxidising\n %.0f ohm"
              args: [ 'x' ]
    - name: "CO Sensor"
#      id: 6814_co_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_co_sensor
            text: 
              format: "CO\n %.0f ppm"
              args: [ 'x' ]
    - name: "NO2 Sensor"
#      id: 6814_no2_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_no2_sensor
            text: 
              format: "NO2\n %.0f ppm"
              args: [ 'x' ]
    - name: "NH3 Sensor"
#      id: 6814_nh3_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'µg/m³'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_nh3_sensor
            text: 
              format: "NH3\n %.0f ug/m3"
              args: [ 'x' ]
    - name: "C3H8 Sensor"
#      id: 6814_c3h8_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_c3h8_sensor
            text: 
              format: "C3H8\n %.0f ppm"
              args: [ 'x' ]
    - name: "C4H10 Sensor"
#      id: 6814_c4h10_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_c4h10_sensor
            text: 
              format: "C4H10\n %.0f ppm"
              args: [ 'x' ]
    - name: "CH4 Sensor"
#      id: 6814_ch4_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_ch4_sensor
            text: 
              format: "CH4\n %.0f ppm"
              args: [ 'x' ]
    - name: "H2 Sensor"
#      id: 6814_h2_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_h2_sensor
            text: 
              format: "H2\n %.0f ppm"
              args: [ 'x' ]
    - name: "C2H5OH Sensor"
#      id: 6814_c2h5oh_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'     
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_c2h5oh_sensor
            text: 
              format: "C2H5OH\n %.0f ppm"
              args: [ 'x' ]

text_sensor:
  - platform: wifi_info
    ssid:
      icon: mdi:wifi
      id: wifi_ssid
      name: WiFi SSID
      on_value:
          then:
            - lvgl.label.update:
                id: lbl_wifi_ssid
                text:
                  format: "Wi-Fi SSID:\n%s"
                  args: [ 'id(wifi_ssid).state.c_str()' ]  
                  # args: [ 'x' ]  
    dns_address:
      icon: mdi:wifi
      name: WiFi DNS Address
    ip_address:
      icon: mdi:wifi
      id: wifi_ip
      name: WiFi IP Address
      on_value:
          then:
            - lvgl.label.update:
                id: lbl_wifi_ip
                text:
                  format: "Wi-Fi IP:\n%s"
                  args: [ 'id(wifi_ip).state.c_str()' ]  
                  # args: [ 'x' ]  
  #     address_0:
  #       name: ESP IP Address 0
  #     address_1:
  #       name: ESP IP Address 1
  #     address_2:
  #       name: ESP IP Address 2
  #     address_3:
  #       name: ESP IP Address 3
  #     address_4:
  #       name: ESP IP Address 4
  #   bssid:
  #     name: ESP Connected BSSID
  #   mac_address:
  #     name: ESP Mac Wifi Address
  #   scan_results:
  #     name: ESP Latest Scan Results

  - platform: bme68x_bsec2
    iaq_accuracy:
      name: "BME68x IAQ Accuracy"
      id: bme68x_iaqacc
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_bme68x_iaqacc
            text: 
              format: "\n%s"
              args: [ 'id(bme68x_iaqacc).state.c_str()' ]

  - platform: template
    name: "BME68x IAQ Classification"
    lambda: |-
      if ( int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) >= 51 && int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) >= 101 && int(id(iaq).state) <= 150) {
        return {"Lightly polluted"};
      }
      else if (int(id(iaq).state) >= 151 && int(id(iaq).state) <= 200) {
        return {"Moderately polluted"};
      }
      else if (int(id(iaq).state) >= 201 && int(id(iaq).state) <= 250) {
        return {"Heavily polluted"};
      }
      else if (int(id(iaq).state) >= 251 && int(id(iaq).state) <= 350) {
        return {"Severely polluted"};
      }
      else if (int(id(iaq).state) >= 351) {
        return {"Extremely polluted"};
      }
      else {
        return {"error"};
      }

switch:
  - platform: custom
    lambda: |-
      auto heater_switch = new HeaterSwitch();
      App.register_component(heater_switch);
      return {heater_switch};

    switches:
      id: heater_override
      entity_category: "config"
      name: "Heater Override"
      restore_mode: RESTORE_DEFAULT_OFF # Attempt to restore state but initialize the light as OFF

  - platform: custom
    lambda: |-
      auto calibration_switch = new CalibrationSwitch();
      App.register_component(calibration_switch);
      return {calibration_switch};

    switches:
      id: calibration_switch
      entity_category: "config"
      name: "Store Calibration"
      restore_mode: RESTORE_DEFAULT_OFF # Attempt to restore state but initialize the light as OFF
      on_turn_on:
        - lvgl.widget.update:
            id: butt_6814_calibrate
            state:
              checked: !lambda return id(calibration_switch).state;
      on_turn_off:
        - lvgl.widget.update:
            id: butt_6814_calibrate
            state:
              checked: !lambda return id(calibration_switch).state;

  - platform: template
    name: Antiburn
    id: switch_antiburn
    entity_category: "config"
    icon: mdi:television-shimmer
    optimistic: true
    turn_on_action:
      - logger.log: "Starting Antiburn"
      - if:
          condition: lvgl.is_paused
          then:
            - lvgl.resume:
            - lvgl.widget.redraw:
      - lvgl.pause:
          show_snow: true
    turn_off_action:
      - logger.log: "Stopping Antiburn"
      - if:
          condition: lvgl.is_paused
          then:
            - lvgl.resume:
            - lvgl.widget.redraw:



color:
  - id: RED
    red: 100%
    green: 0%
    blue: 0%
  - id: BLUE
    red: 0%
    green: 0%
    blue: 100%
  - id: WHITE
    red: 100%
    green: 100%
    blue: 100%

    
light:
  - platform: monochromatic
    output: gpio_32_backlight_pwm
    name: "Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON
  - platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: 
      number: GPIO15
      ignore_strapping_warning: true #This is correct pin for M5STACK FIRE Internal LED strips
    num_leds: 10
    rmt_channel: 1
    chipset: SK6812
    name: "${friendly_name} Side Light"
    restore_mode: RESTORE_AND_OFF # Attempt to restore state but initialize the light as OFF
    id: side_light
    default_transition_length: 0s
    effects:
      - addressable_rainbow:
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_flicker:
      - addressable_fireworks:
      - addressable_random_twinkle:
      - addressable_twinkle:

  - platform: rgb
    name: "Gas Light"
    red: output_red
    green: output_green
    blue: output_blue

output:
# Internal LEDS
  - platform: ledc # backlight output
    pin: 32
    id: gpio_32_backlight_pwm

  - platform: custom
    type: float
    lambda: |-
      auto custom_red = new LedChannel('R');
      auto custom_green = new LedChannel('G');
      auto custom_blue = new LedChannel('B');
      App.register_component(custom_red);
      App.register_component(custom_green);
      App.register_component(custom_blue);
      return {custom_red, custom_green, custom_blue};

    outputs:
    - id: output_red
    - id: output_green
    - id: output_blue

display:
  - platform: ili9xxx
    id: m5stack_display #320x240 pixels
    model: M5Stack
    cs_pin: 14
    dc_pin: 27
    reset_pin: 33
    rotation: 0
    invert_colors: true
    auto_clear_enabled: false
    update_interval: never

font:
  - file: "gfonts://Roboto@medium"
    id: font_roboto_medium22
    size: 22
    glyphs: '!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz/³µ'

image:
  - file: https://esphome.io/_static/favicon-512x512.png
    id: boot_logo
    resize: 200x200
    type: RGB565
    use_transparency: true

#==========================================================================================================================
lvgl:
  displays:
    - m5stack_display
  encoders:
    enter_button: M5_BtnB
    sensor: 
      left_button: M5_BtnA
      right_button: M5_BtnC
#------------------------------------------
  theme:
    label:
      text_font: montserrat_14 # set all your labels to use your custom defined font
    button:
      bg_color: 0x2F8CD8
      bg_grad_color: 0x005782
      bg_grad_dir: VER
      bg_opa: COVER
      border_color: 0x0077b3
      border_width: 1
      text_color: 0xFFFFFF
      pressed: # set some button colors to be different in pressed state
        bg_color: 0x006699
        bg_grad_color: 0x00334d
      checked: # set some button colors to be different in checked state
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        text_color: 0xfff300
      focused:
        bg_color: 0x00cc00
        border_color: 0xff0000
        bg_grad_dir: NONE
        border_width: 4
    buttonmatrix:
      bg_opa: TRANSP
      border_color: 0x0077b3
      border_width: 1
      text_color: 0xFFFFFF
      pad_all: 1
      focused:
        bg_color: 0x00cc00
        border_color: 0xff0000
        bg_grad_dir: NONE
        border_width: 4
      items: # set all your buttonmatrix buttons to use your custom defined styles and font
        bg_color: 0x2F8CD8
        bg_grad_color: 0x005782
        bg_grad_dir: VER
        bg_opa: COVER
        border_color: 0x0077b3
        border_width: 1
        text_color: 0xFFFFFF
        text_font: montserrat_14
        pressed:
          bg_color: 0x006699
          bg_grad_color: 0x00334d
        checked:
          bg_color: 0x1d5f96
          bg_grad_color: 0x03324A
          text_color: 0x005580
        focused:
          bg_color: 0x00cc00
          border_color: 0xff0000
          bg_grad_dir: NONE
          border_width: 4
          border_post: true
#          border_side: INTERNAL
    switch:
      bg_color: 0xC0C0C0
      bg_grad_color: 0xb0b0b0
      bg_grad_dir: VER
      bg_opa: COVER
      focused:
        bg_color: 0x00cc00
        border_color: 0xff0000
        bg_grad_dir: NONE
        border_width: 4
      checked:
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        bg_grad_dir: VER
        bg_opa: COVER
      knob:
        bg_color: 0xFFFFFF
        bg_grad_color: 0xC0C0C0
        bg_grad_dir: VER
        bg_opa: COVER
    slider:
      border_width: 1
      border_opa: 15%
      bg_color: 0xcccaca
      bg_opa: 15%
      focused:
        bg_color: 0x00cc00
        border_color: 0xff0000
        bg_grad_dir: NONE
        border_width: 4
      indicator:
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        bg_grad_dir: VER
        bg_opa: COVER
      knob:
        bg_color: 0x2F8CD8
        bg_grad_color: 0x005782
        bg_grad_dir: VER
        bg_opa: COVER
        border_color: 0x0077b3
        border_width: 1
        text_color: 0xFFFFFF
#------------------------------------------
  style_definitions:
    - id: header_footer
      bg_color: 0x2F8CD8
      bg_grad_color: 0x005782
      bg_grad_dir: VER
      bg_opa: COVER
      border_opa: TRANSP
      radius: 0
      pad_all: 0
      pad_row: 0
      pad_column: 0
      border_color:  0xccff33 #was 0x0077b3
      text_color: 0xFFFFFF
      width: 100%
      height: 30
  top_layer:
    widgets:
      - label:
          text: "B"
          id: lbl_battery
#          hidden: true
          align: top_right
          x: -22
          y: 7
          text_align: right
          text_color: 0xFFFFFF
      - label:
          text: "\uF1EB"
          id: lbl_hastatus
          hidden: true
          align: top_right
          x: -2
          y: 7
          text_align: right
          text_color: 0xFFFFFF
      - label:
          text: "Time" # Will be overwritten by the time update script
          id: lbl_time
          align: top_left
          x: 2
          y: 7
          text_align: left
          text_color: 0xFFFFFF
      - buttonmatrix:
          align: bottom_mid
          styles: header_footer
          pad_all: 0
          outline_width: 0
          id: top_layer
          items:
            styles: header_footer
          rows:
            - buttons:
              - id: focus_next
                text: "next focus"
                on_press:
                  then:
                    lvgl.widget.focus:
                      action: next
              - id: page_home
                text: "\uF015"
                on_press:
                  then:
                    lvgl.page.show: main_page
              - id: page_next
                text: "next page"
                on_press:
                  then:
                    lvgl.page.next:
      - obj:
          id: boot_screen
          x: 0
          y: 0
          width: 100%
          height: 100%
          bg_color: 0xffffff
          bg_opa: COVER
          radius: 0
          pad_all: 0
          border_width: 0
          widgets:
            - image:
                align: CENTER
                src: boot_logo
                y: -40
            - spinner:
                align: CENTER
                y: 95
                height: 50
                width: 50
                spin_time: 1s
                arc_length: 60deg
                arc_width: 8
                indicator:
                  arc_color: 0x18bcf2
                  arc_width: 8
          on_press:
            - lvgl.widget.hide: boot_screen
  pages:
#------------------------------------------
    - id: main_page
      on_load:
        - lvgl.widget.focus: top_layer # focus_next
      bg_color: 0x000000
      widgets:
        - obj: # Title block
            align: TOP_MID
            styles: header_footer
            widgets:
              - label:
                  text: "ESPHome LVGL Display"
                  align: CENTER
                  text_align: CENTER
                  text_color: 0xFFFFFF
        - obj: # a properly placed coontainer object for all these controls
            text_color: 0xFFFFFF
            align: CENTER
            width: 320
            height: 180 #240-(2*30) #Display area less header & footer
            pad_all: 6
            bg_opa: TRANSP
            border_opa: TRANSP
            outline_width: 1 #debug
            layout: # enable the GRID layout for the children widgets
              type: GRID # split the rows and the columns proportionally
              grid_columns: [FR(1), FR(1), FR(1)] # equal
              grid_rows: [FR(1), FR(1), FR(1), FR(1)] # like percents
              pad_row: 6
              pad_column: 8
            widgets:
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_app_name
                  text: ${friendly_name}
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_wifi_strength
                  text: wifi
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_wifi_ssid
                  text: ssid
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_wifi_ip
                  text: ip addr
#------------------------------------------
    - id: second_page
      widgets:
        - obj:
            align: TOP_MID
            styles: header_footer
            widgets:
              - label:
                  text: "A second page"
                  align: CENTER
                  text_align: CENTER
                  text_color: 0xFFFFFF
        - button:
            x: 10
            y: 40
            width: 70
            height: 30
            id: btn_id
            checkable: true
            on_value:
              then:
                - logger.log:
                    format: "Button checked state: %d"
                    args: [ x ]
            widgets:
              - label:
                  align: center
                  text: "Backlight Dim"
#------------------------------------------
    - id: third_page
      widgets:
        - obj: 
            align: TOP_MID
            styles: header_footer
            widgets:
              - label:
                  text: "BME 688 Sensor"
                  align: CENTER
                  text_align: CENTER
                  text_color: 0xFFFFFF
        - obj: # a properly placed coontainer object for all these controls
            align: CENTER
            width: 320
            height: 180 #240-(2*30) #Display area less header & footer
            pad_all: 6
            bg_opa: TRANSP
            border_opa: TRANSP
            outline_width: 1 #debug
            layout: # enable the GRID layout for the children widgets
              type: GRID # split the rows and the columns proportionally
              grid_columns: [FR(1), FR(1), FR(1)] # equal
              grid_rows: [FR(1), FR(1), FR(1), FR(1)] # like percents
              pad_row: 6
              pad_column: 8
            widgets:
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_bme68x_temperature
                  text: "Temp:"
              - label: # gauge numeric indicator
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_bme68x_humidity
                  text: "Humidity:"
              - label: # gauge numeric indicator
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_bme68x_pressure
                  text: "Pressure:"
              - label: 
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_bme68x_iaq
                  text: "IAQ"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_bme68x_co2equivalent
                  text: "CO2: "
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_bme68x_vocequivalent
                  text: "VOC: "
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_bme68x_iaqacc
                  text: "Status"
#------------------------------------------
    - id: fourth_page
      widgets:
        - obj: 
            align: TOP_MID
            styles: header_footer
            widgets:
              - label:
                  text: "MICS6814 Gas Sensor"
                  align: CENTER
                  text_align: CENTER
                  text_color: 0xFFFFFF
        - obj: # a properly placed coontainer object for all these controls
            align: CENTER
            width: 320
            height: 180 #240-(2*30) #Display area less header & footer
            pad_all: 6
            bg_opa: TRANSP
            border_opa: TRANSP
            outline_width: 1 #debug
            layout: # enable the GRID layout for the children widgets
              type: GRID # split the rows and the columns proportionally
              grid_columns: [FR(1), FR(1), FR(1)] # equal
              grid_rows: [FR(1), FR(1), FR(1), FR(1)] # like percents
              pad_row: 6
              pad_column: 8
            widgets:
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_co_sensor
                  text: "CO"
              - label: # gauge numeric indicator
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_no2_sensor
                  text: "NO2"
              - label: # gauge numeric indicator
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_nh3_sensor
                  text: "NH3"
              - label: 
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_c3h8_sensor
                  text: "C3H8"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_c4h10_sensor
                  text: "C4H10"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_ch4_sensor
                  text: "CH4"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_h2_sensor
                  text: "H2"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_c2h5oh_sensor
                  text: "C2H5OH"
              - label: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_red_res_sensor
                  text: "Red Res"
              - label: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_nh3_res_sensor
                  text: "NH3 Res"
              - label: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_ox_res_sensor
                  text: "Ox Res"
              - button: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: butt_6814_calibrate
                  widgets: 
                    - label: 
                        align: CENTER
                        text: "Calibrate"
                  on_click: 
                    switch.toggle: calibration_switch


