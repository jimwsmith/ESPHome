esphome:
  name: ${esphome_name}
  includes:
    - mics6814.h
  libraries:
    - "Wire"
    - https://github.com/ZodiusInfuser/IOExpander_Library

sensor:
  - platform: custom
    id: misc6814sens
    # update_interval defined at top of mics6814.h
    lambda: |-
      auto my_sensor = new mics6814();
      App.register_component(my_sensor);
      return {my_sensor->redres_sensor, my_sensor->nh3res_sensor, my_sensor->oxres_sensor, my_sensor->co_sensor, my_sensor->no2_sensor, my_sensor->nh3_sensor, my_sensor->c3h8_sensor, my_sensor->c4h10_sensor, my_sensor->ch4_sensor, my_sensor->h2_sensor, my_sensor->c2h5oh_sensor };
    sensors:
    - name: "Red Res Sensor"
#      id: 6814_red_res_sensor
      entity_category: "diagnostic"
      unit_of_measurement: Ohm
      accuracy_decimals: 0
      icon: "mdi:gauge"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_red_res_sensor
            text: 
              format: "Reducing\n %.0f ohm"
              args: [ 'x' ]
    - name: "NH3 Res Sensor"
#      id: 6814_nh3_res_sensor
      entity_category: "diagnostic"
      unit_of_measurement: Ohm
      accuracy_decimals: 0
      icon: "mdi:gauge"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_nh3_res_sensor
            text: 
              format: "NH3\n %.0f ohm"
              args: [ 'x' ]
    - name: "Ox Res Sensor"
#      id: 6814_ox_res_sensor
      entity_category: "diagnostic"
      unit_of_measurement: Ohm
      accuracy_decimals: 0
      icon: "mdi:gauge"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_ox_res_sensor
            text: 
              format: "Oxidising\n %.0f ohm"
              args: [ 'x' ]
    - name: "CO Sensor"
#      id: 6814_co_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_co_sensor
            text: 
              format: "CO\n %.0f ppm"
              args: [ 'x' ]
        - lvgl.label.update:
            id: lbl_bar_co
            text: 
              format: "CO: %.0f"
              args: [ 'x' ]
        - lvgl.bar.update:
            id: bar_co
            value: !lambda |- 
              return (static_cast<int>(round(x*100/(id(co_max).state)))); // note argument x is not in quotes here as lambda is C++
      on_value_range:
        - below: !lambda |-
            return ( id(co_warn).state );
          then:
            - lvgl.bar.update:
                id: bar_co
                indicator:
                  bg_color: 0x00FF00 #Green
        - above: !lambda |-
            return ( id(co_warn).state );
          below: !lambda |-
            return ( id(co_alarm).state );
          then:
            - lvgl.bar.update:
                id: bar_co
                indicator:
                  bg_color: 0xFF8000 #Orange
        - above: !lambda |-
            return ( id(co_alarm).state );
          then:
            - lvgl.bar.update:
                id: bar_co
                indicator:
                  bg_color: 0xFF0000 #Red
    - name: "NO2 Sensor"
#      id: 6814_no2_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_no2_sensor
            text: 
              format: "NO2\n %.0f ppm"
              args: [ 'x' ]
        - lvgl.label.update:
            id: lbl_bar_no2
            text: 
              format: "NO2: %.0f"
              args: [ 'x' ]
        - lvgl.bar.update:
            id: bar_no2
            value: !lambda |- 
              return (static_cast<int>(round(x*100/(id(no2_max).state)))); // note argument x is not in quotes here as lambda is C++
      on_value_range:
        - below: !lambda |-
            return ( id(no2_warn).state );
          then:
            - lvgl.bar.update:
                id: bar_no2
                indicator:
                  bg_color: 0x00FF00 #Green
        - above: !lambda |-
            return ( id(no2_warn).state );
          below: !lambda |-
            return ( id(no2_alarm).state );
          then:
            - lvgl.bar.update:
                id: bar_no2
                indicator:
                  bg_color: 0xFF8000 #Orange
        - above: !lambda |-
            return ( id(no2_alarm).state );
          then:
            - lvgl.bar.update:
                id: bar_no2
                indicator:
                  bg_color: 0xFF0000 #Red
    - name: "NH3 Sensor"
#      id: 6814_nh3_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'µg/m³'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_nh3_sensor
            text: 
              format: "NH3\n %.0f ug/m3"
              args: [ 'x' ]
        - lvgl.label.update:
            id: lbl_bar_nh3
            text: 
              format: "NH3: %.0f"
              args: [ 'x' ]
        - lvgl.bar.update:
            id: bar_nh3
            value: !lambda |- 
              return (static_cast<int>(round(x*100/(id(nh3_max).state)))); // note argument x is not in quotes here as lambda is C++
      on_value_range:
        - below: !lambda |-
            return ( id(nh3_warn).state );
          then:
            - lvgl.bar.update:
                id: bar_nh3
                indicator:
                  bg_color: 0x00FF00 #Green
        - above: !lambda |-
            return ( id(nh3_warn).state );
          below: !lambda |-
            return ( id(nh3_alarm).state );
          then:
            - lvgl.bar.update:
                id: bar_nh3
                indicator:
                  bg_color: 0xFF8000 #Orange
        - above: !lambda |-
            return ( id(nh3_alarm).state );
          then:
            - lvgl.bar.update:
                id: bar_nh3
                indicator:
                  bg_color: 0xFF0000 #Red
    - name: "C3H8 Sensor"
#      id: 6814_c3h8_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_c3h8_sensor
            text: 
              format: "C3H8\n %.0f ppm"
              args: [ 'x' ]
    - name: "C4H10 Sensor"
#      id: 6814_c4h10_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_c4h10_sensor
            text: 
              format: "C4H10\n %.0f ppm"
              args: [ 'x' ]
    - name: "CH4 Sensor"
#      id: 6814_ch4_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_ch4_sensor
            text: 
              format: "CH4\n %.0f ppm"
              args: [ 'x' ]
    - name: "H2 Sensor"
#      id: 6814_h2_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_h2_sensor
            text: 
              format: "H2\n %.0f ppm"
              args: [ 'x' ]
    - name: "C2H5OH Sensor"
#      id: 6814_c2h5oh_sensor
      accuracy_decimals: 0
      unit_of_measurement: 'ppm'     
      icon: "mdi:test-tube"
      on_value: #When value changes update LVGL display
        - lvgl.label.update:
            id: lbl_6814_c2h5oh_sensor
            text: 
              format: "C2H5OH\n %.0f ppm"
              args: [ 'x' ]

switch:
  - platform: custom
    lambda: |-
      auto heater_switch = new HeaterSwitch();
      App.register_component(heater_switch);
      return {heater_switch};

    switches:
      id: heater_override
      entity_category: "config"
      name: "Heater Override"
      restore_mode: RESTORE_DEFAULT_OFF # Attempt to restore state but initialize the light as OFF

  - platform: custom
    lambda: |-
      auto calibration_switch = new CalibrationSwitch();
      App.register_component(calibration_switch);
      return {calibration_switch};

    switches:
      id: calibration_switch
      entity_category: "config"
      name: "Store Calibration"
      restore_mode: RESTORE_DEFAULT_OFF # Attempt to restore state but initialize the light as OFF
      on_turn_on:
        - lvgl.widget.update:
            id: butt_6814_calibrate
            state:
              checked: !lambda return id(calibration_switch).state;
      on_turn_off:
        - lvgl.widget.update:
            id: butt_6814_calibrate
            state:
              checked: !lambda return id(calibration_switch).state;

output: 
  - platform: custom
    type: float
    lambda: |-
      auto custom_red = new LedChannel('R');
      auto custom_green = new LedChannel('G');
      auto custom_blue = new LedChannel('B');
      App.register_component(custom_red);
      App.register_component(custom_green);
      App.register_component(custom_blue);
      return {custom_red, custom_green, custom_blue};

    outputs:
    - id: output_red
    - id: output_green
    - id: output_blue


light: 
  - platform: rgb
    id: gas_light
    name: "Gas Light"
    red: output_red
    green: output_green
    blue: output_blue

#==========================================================================================================================
lvgl: 
  pages: 
    - id: mics6814_page
      widgets:
        - obj: 
            align: TOP_MID
            styles: header_footer
            widgets:
              - label:
                  text: "MICS6814 Gas Sensor"
                  align: CENTER
                  text_align: CENTER
                  text_color: 0xFFFFFF
        - obj: # a properly placed coontainer object for all these controls
            align: CENTER
            width: 320
            height: 180 #240-(2*30) #Display area less header & footer
            pad_all: 6
            bg_opa: TRANSP
            border_opa: TRANSP
            outline_width: 1 #debug
            layout: # enable the GRID layout for the children widgets
              type: GRID # split the rows and the columns proportionally
              grid_columns: [FR(1), FR(1), FR(1)] # equal
              grid_rows: [FR(1), FR(1), FR(1), FR(1)] # like percents
              pad_row: 6
              pad_column: 8
            widgets:
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_co_sensor
                  text: "CO"
              - label: # gauge numeric indicator
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_no2_sensor
                  text: "NO2"
              - label: # gauge numeric indicator
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_nh3_sensor
                  text: "NH3"
              - label: 
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_c3h8_sensor
                  text: "C3H8"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_c4h10_sensor
                  text: "C4H10"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_ch4_sensor
                  text: "CH4"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_h2_sensor
                  text: "H2"
              - label: 
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_c2h5oh_sensor
                  text: "C2H5OH"
              - label: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_red_res_sensor
                  text: "Red Res"
              - label: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_nh3_res_sensor
                  text: "NH3 Res"
              - label: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 2 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: lbl_6814_ox_res_sensor
                  text: "Ox Res"
              - button: 
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  id: butt_6814_calibrate
                  widgets: 
                    - label: 
                        align: CENTER
                        text: "Calibrate"
                  on_click: 
                    switch.toggle: calibration_switch


